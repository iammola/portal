{
  "parser": "@typescript-eslint/parser",
  "plugins": ["react", "@typescript-eslint"],
  "extends": [
    "eslint:recommended",
    "next/core-web-vitals",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:import/typescript",
    "plugin:import/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "env": {
    "es2021": true,
    "browser": true
  },
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module",
    "project": ["./tsconfig.json"],
    "ecmaFeatures": { "jsx": true }
  },
  "overrides": [
    {
      "files": "src/pages/api/**/*.*",
      "rules": { "import/no-anonymous-default-export": "off" }
    }
  ],
  "settings": {
    "react": { "version": "detect" },
    "import/resolver": { "typescript": {} }
  },
  "rules": {
    "no-else-return": "warn",
    "semi": ["error", "always"],
    "no-useless-rename": "warn",
    "quotes": ["error", "double"],
    "eol-last": ["warn", "always"],
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-multiple-empty-lines": ["warn", { "max": 1 }],
    "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true, "enforceForJSX": true }],

    "import/named": "off",
    "import/namespace": "off",
    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "warnOnUnassignedImports": true,
        "groups": ["builtin", "external", "internal", "parent", ["sibling", "index"], "object", "type"]
      }
    ],

    "react/prop-types": "off",
    "react/display-name": "off",
    "react/button-has-type": "warn",
    "react/self-closing-comp": ["warn", { "component": true }],

    "react-hooks/exhaustive-deps": ["warn", { "additionalHooks": "useIsomorphicLayoutEffect" }],

    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/member-delimiter-style": "warn",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": ["error", { "fixToUnknown": true }],
    "@typescript-eslint/array-type": ["error", { "default": "array-simple" }],
    "@typescript-eslint/no-namespace": ["error", { "allowDeclarations": true }],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "error",
      { "allowComparingNullableBooleansToTrue": false }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "type"]
  }
}
